generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model artists {
  id         BigInt   @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now()) @db.Timestamptz(6)
  songs      songs[]
}

model bookmarks {
  user_id    BigInt
  song_id    BigInt
  created_at DateTime @default(now()) @db.Timestamptz(6)
  songs      songs    @relation(fields: [song_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, song_id])
}

model songs {
  id           BigInt      @id @default(autoincrement())
  artist_id    BigInt?
  song_no_tj   String?     @db.VarChar(10)
  song_no_ky   String?     @db.VarChar(10)
  title        String
  youtube_link String?
  created_at   DateTime    @default(now()) @db.Timestamptz(6)
  lyricist     String?
  composer     String?
  cr_keyword   String?     @db.VarChar
  release      DateTime?   @db.Date
  album_art    String?
  rank_score   Int?        @unique @db.SmallInt
  bookmarks    bookmarks[]
  artists      artists?    @relation(fields: [artist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([title, artist_id], map: "songs_title_artist_unique")
}

model users {
  id         BigInt      @id @default(autoincrement())
  email      String      @unique
  password   String      @db.VarChar(255)
  username   String      @unique @db.VarChar(50)
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  bookmarks  bookmarks[]
}
